[project]
name = "beeai-framework-starter"
version="0.0.1"
license = "Apache-2.0"
readme = "README.md"
authors = [{ name = "IBM Corp." }]
maintainers = [
    { name = "Tomas Dvorak", email = "toomas2d@gmail.com" }
]
requires-python = ">=3.11,<3.14"
dependencies = [
    "beeai-framework[all]>=0.1.49,<0.2.0",
    "openinference-instrumentation-beeai>=0.1.10,<0.2.0",
    "opentelemetry-exporter-otlp>=1.36.0,<2.0.0",
    "opentelemetry-sdk>=1.36.0,<2.0.0",
    "termcolor>=2.5,<3.0",
]

[project.urls]
homepage = "https://github.com/i-am-bee/beeai-framework-py-starter#readme"
repository = "https://github.com/i-am-bee/beeai-framework-py-starter"


[dependency-groups]
dev = [
    "mypy>=1.15.0,<2.0.0",
    "poethepoet>=0.32.2,<0.33.0",
    "ruff>=0.9.6,<0.10.0",
]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/beeai_framework"
exclude = "^build/$"
check_untyped_defs = true
plugins = ["pydantic.mypy"]
strict = true

[tool.poe.tasks.build]
help = "Build a package"
cmd = "uv build"

[tool.poe.tasks.commit]
help = "Creates a commit"
cmd = "git commit --signoff"

[tool.poe.tasks.format]
help = "Run all formating tools"
control.expr = "fix"
args = [
    { name = "TARGET", positional = true, multiple = true },
    { name = "fix", options = ["--fix"], type = "boolean", help = "Apply fixes instead of checking" }
]
uses = { PY_FILES = "_match_files --ext py|ipynb $TARGET" }

    [[tool.poe.tasks.format.switch]]
        case = "True"
        cmd = "ruff format ${PY_FILES}"

    [[tool.poe.tasks.format.switch]]
        cmd = "ruff format --check ${PY_FILES}"

[tool.poe.tasks.lint]
help = "Check for errors and fix them using ruff"
args = [
    { name = "TARGET", positional = true, multiple = true },
    { name = "FIX", options = ["--fix"], type = "boolean", help = "Apply fixes instead of checking" }
]
uses = { PY_FILES = "_match_files --ext py|ipynb $TARGET" }
cmd = "ruff check ${FIX:+--fix} ${PY_FILES}"

[tool.poe.tasks.git]
control.expr = "hook"
args = ["hook", { name = "TARGET", positional = true, multiple = true }]
default = "pass"

    [[tool.poe.tasks.git.switch]]
    case = "pre-commit"
    sequence = [
        { "ref" = "format --fix ${TARGET}"},
        { "ref" = "lint --fix ${TARGET}" },
        { "ref" = "type-check ${TARGET}" },
    ]

[tool.poe.tasks.infra]
args = ["type"]
control.expr = "type"

    [[tool.poe.tasks.infra.switch]]
    case = "pull"
    cmd = "docker compose --profile=all pull"

    [[tool.poe.tasks.infra.switch]]
    case = "start"
    cmd = "docker compose --profile=all up --detach --wait"

    [[tool.poe.tasks.infra.switch]]
    case = "stop"
    cmd = "docker compose --profile=all down"

    [[tool.poe.tasks.infra.switch]]
    case = "remove"
    cmd = "poe infra --type stop -- --volumes"

[tool.poe.tasks._match_files]
help = "Extract files by their extension"
args = [
    { name = "TARGET", positional = true, multiple = true },
    { name = "EXTENSION", options = ["--ext"] }
]
shell = "printf '%s\\n' $TARGET | grep -E \"\\.(${EXTENSION})$\" | tr '\\n' ' '"

[tool.poe.tasks.type-check]
help = "Static Type Checker with optional flags"
args = [
    { name = "TARGET", positional = true, multiple = true, default = "." }
]
uses = { PY_FILES = "_match_files --ext py $TARGET" }
cmd = "mypy ${PY_FILES:-.} ${POE_ARGS}"

[build-system]
requires = ["hatchling>=1.18"]
build-backend = "hatchling.build"

[tool.ruff]
lint.select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "UP",    # pyupgrade
    "I",     # isort
    "B",     # bugbear
    "ANN",   # annotations
    "N",     # pep8-naming
    "C4",    # Comprehensions
    "DTZ",   # DatetimeZ
    "Q",     # Quotes
    "SIM",   # Simplify
    "RUF",   # Ruff
    "TID",   # tidy-imports
    "ASYNC", # async
]
lint.ignore = ["ANN401", "B904"]
lint.fixable = ["ALL"]
lint.unfixable = []
force-exclude = true
line-length = 120

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["E501"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-tidy-imports]
# Disallow all relative imports, "parents" | "all"
ban-relative-imports = "all"
